ffffvvvvvv'ffffvvvvvv'ffffvvvvvv'ffffvvvvvv'//file:main.gopackagemainimport("fmt""github.com/kataras/iris/v12""github.com/kataras/iris/v12/mvc""github.com/kataras/iris/v12/sessions""shop/rpc"//"github.com/kataras/iris/v12/websocket""net/http""shop/handler"gf"github.com/snowlyg/gotransformer""shop/web/routes""time""golang.org/x/net/websocket""shop/config""shop/models""shop/services""shop/transformer"_"shop/validates""shop/web/controllers")varConf*config.Configfuncinit(){//var_pathstring////flag.StringVar(&_path,"c","./config.yaml","defaultconfigpath")//Conf=&config.Config{}////content,err:=ioutil.ReadFile(_path)®//iferr==nil{//err=yaml.Unmarshal(content,Conf)//fmt.Println("Conf=",Conf)//}}funcgetTransformConfiguration(irisConfigurationiris.Configuration)*transformer.Conf{app:=transformer.App{}g:=gf.NewTransform(&app,irisConfiguration.Other["App"],time.RFC3339)_=g.Transformer()db:=transformer.Mysql{}g.OutputObj=&dbg.InsertObj=irisConfiguration.Other["Mysql"]_=g.Transformer()mongodb:=transformer.Mongodb{}g.OutputObj=&mongodbg.InsertObj=irisConfiguration.Other["Mongodb"]_=g.Transformer()redis:=transformer.Redis{}g.OutputObj=&redisg.InsertObj=irisConfiguration.Other["Redis"]_=g.Transformer()sqlite:=transformer.Sqlite{}g.OutputObj=&sqliteg.InsertObj=irisConfiguration.Other["Sqlite"]_=g.Transformer()testData:=transformer.TestData{}g.OutputObj=&testDatag.InsertObj=irisConfiguration.Other["TestData"]_=g.Transformer()kafkaConf:=transformer.Kafka{}g.OutputObj=&kafkaConfg.InsertObj=irisConfiguration.Other["Kafka"]_=g.Transformer()etcdConf:=transformer.EtcdConf{}g.OutputObj=&etcdConfg.InsertObj=irisConfiguration.Other["Etcd"]_=g.Transformer()cf:=&transformer.Conf{App:app,Mysql:db,Mongodb:mongodb,Redis:redis,Sqlite:sqlite,TestData:testData,Kafka:kafkaConf,Etcd:etcdConf,}returncf}funcGetEtcdKeys()([]string){varetcdKeys[]string//ips,err:=getLocalIP()varips[]string//varerrerrorips=append(ips,"192.168.0.142")//iferr!=nil{//fmt.Println("getlocaliperror:",err)////returnerr//}for_,ip:=rangeips{key:=fmt.Sprintf("/logagent/%s/logconfig",ip)etcdKeys=append(etcdKeys,key)}fmt.Println("从etcd服务器获取到的以IP名为键的键值对:",etcdKeys)returnetcdKeys}//valuesshouldmatchwiththeclientsidesaswell.constenableJWT=trueconstnamespace="default"//ifnamespaceisemptythensimplywebsocket.Events{...}canbeusedinstead.//varserverEvents=websocket.Namespaces{//namespace:websocket.Events{//websocket.OnNamespaceConnected:func(nsConn*websocket.NSConn,msgwebsocket.Message)error{////with`websocket.GetContext`youcanretrievetheIris'`Context`.//ctx:=websocket.GetContext(nsConn.Conn)////log.Printf("[%s]connectedtonamespace[%s]withIP[%s]",//nsConn,msg.Namespace,//ctx.RemoteAddr())//returnnil//},//websocket.OnNamespaceDisconnect:func(nsConn*websocket.NSConn,msgwebsocket.Message)error{//log.Printf("[%s]disconnectedfromnamespace[%s]",nsConn,msg.Namespace)//returnnil//},//"chat":func(nsConn*websocket.NSConn,msgwebsocket.Message)error{////room.String()returns->NSConn.String()returns->Conn.String()returns->Conn.ID()//log.Printf("[%s]sent:%s",nsConn,string(msg.Body))//////Writemessagebacktotheclientmessageownerwith:////nsConn.Emit("chat",msg)////Writemessagetoallexceptthisclientwith://nsConn.Conn.Server().Broadcast(nsConn,msg)//returnnil//},//},//}//funcwebsocket1(app*iris.Application){//websocketServer:=websocket.New(//websocket.DefaultGorillaUpgrader,/Applications/Library/Network/System/Users/Volumes/bin/cores/dev/etc/home/installer.failurerequests/net/opt/private/sbin/tmp/usr/varDefaultGobwasUpgradercanbeusedtoo.config/handler/models/rpc/services/transformer/validates/vendor/web///serverEvents)//////j:=jwt.New(jwt.Config{//////Extractbythe"token"url,//////sotheclientshoulddialwithws://localhost:8080/echo?token=$token////Extractor:jwt.FromParameter("token"),////////ValidationKeyGetter:func(token*jwt.Token)(interface{},error){////return[]byte("MySecret"),nil////},//////////Whenset,themiddlewareverifiesthattokensaresigned//////withthespecificsigningalgorithm//////Ifthesigningmethodisnotconstantthe//////`Config.ValidationKeyGetter`callbackfieldcanbeused//////toimplementadditionalchecks//////Importanttoavoidsecurityissuesdescribedhere://////https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/////SigningMethod:jwt.SigningMethodHS256,////})////idGen:=func(ctxiris.Context)string{//ifusername:=ctx.GetHeader("X-Username");username!=""{//returnusername//}////returnwebsocket.DefaultIDGenerator(ctx)//}//////servestheendpointofws://localhost:8080/echo////withoptionalcustomIDgenerator.////websocketRoute:=app.Get("/echo",websocket.Handler(websocketServer,idGen))//app.Get("/echo",websocket.Handler(websocketServer,idGen))////}funcmain(){app:=iris.New()app.Logger().SetLevel("debug")handler.WebsocketChan=make(chanstring,1000)irisConfiguration:=iris.TOML("./config/conf.tml")transformConfiguration:=getTransformConfiguration(irisConfiguration)models.Register(transformConfiguration)etcdService:=services.NewEtcdService([]string{transformConfiguration.Etcd.Addr},51.txta.sha.txtcasbin为用户绑定角色的实现.txtconfigconfig.yamldocker 之inspect.txtetcd操作记录.txtfolder_structure.pnggo.modgo.sumhandlerlog1.txtmainmain.gomodelsrpcservicestransformervalidatesvendorweb记录docker中运行kafka.txt记录websocket.txt任务内容.txt记录数据库操作.txt调试中途问题记录.txt理解通道缓冲区个数问题.txttime.Second)//[]string{"127.0.0.1:2379"},51.txta.sha.txtcasbin为用户绑定角色的实现.txtconfigconfig.yamldocker 之inspect.txtetcd操作记录.txtfolder_structure.pnggo.modgo.sumhandlerlog1.txtmainmain.gomodelsrpcservicestransformervalidatesvendorweb记录docker中运行kafka.txt记录websocket.txt任务内容.txt记录数据库操作.txt调试中途问题记录.txt理解通道缓冲区个数问题.txttime.Second)etcdKeys:=GetEtcdKeys()fmt.Println("到etcd服务器，按指定的键遍历键值对")for_,key:=rangeetcdKeys{resp:=etcdService.Get(key)for_,ev:=rangeresp.Kvs{services.ConfChan<-string(ev.Value)fmt.Printf("etcdkey=%setcdvalue=%s",ev.Key,ev.Value)}}etcdService.PutKV("/logagent/192.168.0.142/logconfig",`[{"topic":"nginx_log","log_path":"/Users/admin1/goworkspace/shop/log1.txt","service":"test_service","send_rate":1000},{"topic":"nginx_log1","log_path":"/Users/admin1/goworkspace/shop/log2.txt","service":"test_service1","send_rate":1000},{"topic":"nginx_log","log_path":"D:\goworkspace\shop\log1.txt","service":"test_service1","send_rate":1000}]`)//启动对etcd的监听服务，有新的键值对会被监听到goetcdService.EtcdWatch(etcdKeys)tailService:=services.NewTailService()gotailService.RunServer()services.NewKafkaService(transformConfiguration.Kafka.Addr,1)/Applications/Library/Network/System/Users/Volumes/bin/cores/dev/etc/home/installer.failurerequests/net/opt/private/sbin/tmp/usr/var创建iris应用的app.Party得到一个路由对象，party的参数就是一个路径，整个应有都是在这个路径下，mvc.new由这个路由对象，创建一个mvc的app对象。这个app就可以做很多事情，注册服务啊，注册控制器config/handler/models/rpc/services/transformer/validates/vendor/web/etcdApp:=mvc.New(app.Party("/etcd"))etcdApp.Register(etcdService)etcdApp.Handle(new(controllers.EtcdController))models.DB.AutoMigrate(&models.User{},&models.OauthToken{},&models.Role{},&models.Permission{},)tmpl:=iris.HTML("./web/views",".html").Layout("shared/layout.html").Reload(true)app.RegisterView(tmpl)app.HandleDir("/public","./web/public")app.OnAnyErrorCode(func(ctxiris.Context){ctx.ViewData("Message",ctx.Values().GetStringDefault("message","Thepageyou'relookingfordoesn'texist"))ctx.View("shared/error.html")})sessManager:=sessions.New(sessions.Config{Cookie:"sessioncookiename",Expires:241.txta.sha.txtcasbin为用户绑定角色的实现.txtconfigconfig.yamldocker 之inspect.txtetcd操作记录.txtfolder_structure.pnggo.modgo.sumhandlerlog1.txtmainmain.gomodelsrpcservicestransformervalidatesvendorweb记录docker中运行kafka.txt记录websocket.txt任务内容.txt记录数据库操作.txt调试中途问题记录.txt理解通道缓冲区个数问题.txttime.Hour,})index:=mvc.New(app.Party("/index"))index.Handle(new(controllers.IndexController))self:=mvc.New(app.Party("/self"))self.Register(sessManager.Start,)self.Handle(new(controllers.SelfController))shopCar:=mvc.New(app.Party("/shopcar"))shopCar.Handle(new(controllers.ShopCarController))assort:=mvc.New(app.Party("/assort"))assort.Handle(new(controllers.AssortController))order:=mvc.New(app.Party("/order"))order.Handle(new(controllers.OrderController))user:=mvc.New(app.Party("/user"))userService:=services.NewUserService()user.Register(userService,sessManager.Start,)user.Handle(new(controllers.UserGController))routes.RegisterApi(app)apiRoutes:=routes.GetRoutes(app)models.CreateSystemData(apiRoutes)//websocket1(app)gofunc(){fmt.Println("启动websocket服务")http.Handle("/ws",websocket.Handler(handler.Handle))err:=http.ListenAndServe(":88",nil)iferr!=nil{fmt.Println(err)fmt.Println("websocket启动异常")}else{fmt.Println("websocket监听服务")}}()gorpc.Server()//setupWebsocket(app)fmt.Println("启动iris服务")app.Run(//Startsthewebserveratlocalhost:8080iris.Addr(":8082"),//IgnoreserrserverclosedlogwhenCTRL/CMD+Cpressed.iris.WithoutServerError(iris.ErrServerClosed),//Enablesfasterjsonserializationandmore.//iris.WithOptimizations,iris.WithConfiguration(irisConfiguration),)fmt.Println("启动iris服务1")}//funcsetupWebsocket(app*iris.Application){////createourechowebsocketserver//ws:=websocket.New(websocket.Config{//ReadBufferSize:1024,//WriteBufferSize:1024,//})//ws.OnConnection(handleConnection)//////registertheserveronanendpoint.////seetheinlinejavascriptcodeinthewebsockets.html,////thisendpointisusedtoconnecttotheserver.//app.Get("/echo",ws.Handler())////servethejavascriptbuilt'nclient-sidelibrary,////seewebsockets.htmlscripttags,thispathisused.//app.Any("/iris-ws.js",websocket.ClientHandler())//}////funchandleConnection(cwebsocket.Connection){////Readeventsfrombrowser//c.On("chat",func(msgstring){////Printthemessagetotheconsole,c.Context()istheiris'shttpcontext.//fmt.Printf("%ssent:%s",c.Context().RemoteAddr(),msg)////Writemessagebacktotheclientmessageownerwith:////c.Emit("chat",msg)////Writemessagetoallexceptthisclientwith://c.To(websocket.Broadcast).Emit("chat",msg)//})//}//file:main.gopackagemainimport("fmt""github.com/kataras/iris/v12""github.com/kataras/iris/v12/mvc""github.com/kataras/iris/v12/sessions""shop/rpc"//"github.com/kataras/iris/v12/websocket""net/http""shop/handler"gf"github.com/snowlyg/gotransformer""shop/web/routes""time""golang.org/x/net/websocket""shop/config""shop/models""shop/services""shop/transformer"_"shop/validates""shop/web/controllers")varConf*config.Configfuncinit(){//var_pathstring////flag.StringVar(&_path,"c","./config.yaml","defaultconfigpath")//Conf=&config.Config{}////content,err:=ioutil.ReadFile(_path)®//iferr==nil{//err=yaml.Unmarshal(content,Conf)//fmt.Println("Conf=",Conf)//}}funcgetTransformConfiguration(irisConfigurationiris.Configuration)*transformer.Conf{app:=transformer.App{}g:=gf.NewTransform(&app,irisConfiguration.Other["App"],time.RFC3339)_=g.Transformer()db:=transformer.Mysql{}g.OutputObj=&dbg.InsertObj=irisConfiguration.Other["Mysql"]_=g.Transformer()mongodb:=transformer.Mongodb{}g.OutputObj=&mongodbg.InsertObj=irisConfiguration.Other["Mongodb"]_=g.Transformer()redis:=transformer.Redis{}g.OutputObj=&redisg.InsertObj=irisConfiguration.Other["Redis"]_=g.Transformer()sqlite:=transformer.Sqlite{}g.OutputObj=&sqliteg.InsertObj=irisConfiguration.Other["Sqlite"]_=g.Transformer()testData:=transformer.TestData{}g.OutputObj=&testDatag.InsertObj=irisConfiguration.Other["TestData"]_=g.Transformer()kafkaConf:=transformer.Kafka{}g.OutputObj=&kafkaConfg.InsertObj=irisConfiguration.Other["Kafka"]_=g.Transformer()etcdConf:=transformer.EtcdConf{}g.OutputObj=&etcdConfg.InsertObj=irisConfiguration.Other["Etcd"]_=g.Transformer()cf:=&transformer.Conf{App:app,Mysql:db,Mongodb:mongodb,Redis:redis,Sqlite:sqlite,TestData:testData,Kafka:kafkaConf,Etcd:etcdConf,}returncf}funcGetEtcdKeys()([]string){varetcdKeys[]string//ips,err:=getLocalIP()varips[]string//varerrerrorips=append(ips,"192.168.0.142")//iferr!=nil{//fmt.Println("getlocaliperror:",err)////returnerr//}for_,ip:=rangeips{key:=fmt.Sprintf("/logagent/%s/logconfig",ip)etcdKeys=append(etcdKeys,key)}fmt.Println("从etcd服务器获取到的以IP名为键的键值对:",etcdKeys)returnetcdKeys}//valuesshouldmatchwiththeclientsidesaswell.constenableJWT=trueconstnamespace="default"//ifnamespaceisemptythensimplywebsocket.Events{...}canbeusedinstead.//varserverEvents=websocket.Namespaces{//namespace:websocket.Events{//websocket.OnNamespaceConnected:func(nsConn*websocket.NSConn,msgwebsocket.Message)error{////with`websocket.GetContext`youcanretrievetheIris'`Context`.//ctx:=websocket.GetContext(nsConn.Conn)////log.Printf("[%s]connectedtonamespace[%s]withIP[%s]",//nsConn,msg.Namespace,//ctx.RemoteAddr())//returnnil//},//websocket.OnNamespaceDisconnect:func(nsConn*websocket.NSConn,msgwebsocket.Message)error{//log.Printf("[%s]disconnectedfromnamespace[%s]",nsConn,msg.Namespace)//returnnil//},//"chat":func(nsConn*websocket.NSConn,msgwebsocket.Message)error{////room.String()returns->NSConn.String()returns->Conn.String()returns->Conn.ID()//log.Printf("[%s]sent:%s",nsConn,string(msg.Body))//////Writemessagebacktotheclientmessageownerwith:////nsConn.Emit("chat",msg)////Writemessagetoallexceptthisclientwith://nsConn.Conn.Server().Broadcast(nsConn,msg)//returnnil//},//},//}//funcwebsocket1(app*iris.Application){//websocketServer:=websocket.New(//websocket.DefaultGorillaUpgrader,/Applications/Library/Network/System/Users/Volumes/bin/cores/dev/etc/home/installer.failurerequests/net/opt/private/sbin/tmp/usr/varDefaultGobwasUpgradercanbeusedtoo.config/handler/models/rpc/services/transformer/validates/vendor/web///serverEvents)//////j:=jwt.New(jwt.Config{//////Extractbythe"token"url,//////sotheclientshoulddialwithws://localhost:8080/echo?token=$token////Extractor:jwt.FromParameter("token"),////////ValidationKeyGetter:func(token*jwt.Token)(interface{},error){////return[]byte("MySecret"),nil////},//////////Whenset,themiddlewareverifiesthattokensaresigned//////withthespecificsigningalgorithm//////Ifthesigningmethodisnotconstantthe//////`Config.ValidationKeyGetter`callbackfieldcanbeused//////toimplementadditionalchecks//////Importanttoavoidsecurityissuesdescribedhere://////https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/////SigningMethod:jwt.SigningMethodHS256,////})////idGen:=func(ctxiris.Context)string{//ifusername:=ctx.GetHeader("X-Username");username!=""{//returnusername//}////returnwebsocket.DefaultIDGenerator(ctx)//}//////servestheendpointofws://localhost:8080/echo////withoptionalcustomIDgenerator.////websocketRoute:=app.Get("/echo",websocket.Handler(websocketServer,idGen))//app.Get("/echo",websocket.Handler(websocketServer,idGen))////}funcmain(){app:=iris.New()app.Logger().SetLevel("debug")handler.WebsocketChan=make(chanstring,1000)irisConfiguration:=iris.TOML("./config/conf.tml")transformConfiguration:=getTransformConfiguration(irisConfiguration)models.Register(transformConfiguration)etcdService:=services.NewEtcdService([]string{transformConfiguration.Etcd.Addr},51.txta.sha.txtcasbin为用户绑定角色的实现.txtconfigconfig.yamldocker 之inspect.txtetcd操作记录.txtfolder_structure.pnggo.modgo.sumhandlerlog1.txtmainmain.gomodelsrpcservicestransformervalidatesvendorweb记录docker中运行kafka.txt记录websocket.txt任务内容.txt记录数据库操作.txt调试中途问题记录.txt理解通道缓冲区个数问题.txttime.Second)//[]string{"127.0.0.1:2379"},51.txta.sha.txtcasbin为用户绑定角色的实现.txtconfigconfig.yamldocker 之inspect.txtetcd操作记录.txtfolder_structure.pnggo.modgo.sumhandlerlog1.txtmainmain.gomodelsrpcservicestransformervalidatesvendorweb记录docker中运行kafka.txt记录websocket.txt任务内容.txt记录数据库操作.txt调试中途问题记录.txt理解通道缓冲区个数问题.txttime.Second)etcdKeys:=GetEtcdKeys()fmt.Println("到etcd服务器，按指定的键遍历键值对")for_,key:=rangeetcdKeys{resp:=etcdService.Get(key)for_,ev:=rangeresp.Kvs{services.ConfChan<-string(ev.Value)fmt.Printf("etcdkey=%setcdvalue=%s",ev.Key,ev.Value)}}etcdService.PutKV("/logagent/192.168.0.142/logconfig",`[{"topic":"nginx_log","log_path":"/Users/admin1/goworkspace/shop/log1.txt","service":"test_service","send_rate":1000},{"topic":"nginx_log1","log_path":"/Users/admin1/goworkspace/shop/log2.txt","service":"test_service1","send_rate":1000},{"topic":"nginx_log","log_path":"D:\goworkspace\shop\log1.txt","service":"test_service1","send_rate":1000}]`)//启动对etcd的监听服务，有新的键值对会被监听到goetcdService.EtcdWatch(etcdKeys)tailService:=services.NewTailService()gotailService.RunServer()services.NewKafkaService(transformConfiguration.Kafka.Addr,1)/Applications/Library/Network/System/Users/Volumes/bin/cores/dev/etc/home/installer.failurerequests/net/opt/private/sbin/tmp/usr/var创建iris应用的app.Party得到一个路由对象，party的参数就是一个路径，整个应有都是在这个路径下，mvc.new由这个路由对象，创建一个mvc的app对象。这个app就可以做很多事情，注册服务啊，注册控制器config/handler/models/rpc/services/transformer/validates/vendor/web/etcdApp:=mvc.New(app.Party("/etcd"))etcdApp.Register(etcdService)etcdApp.Handle(new(controllers.EtcdController))models.DB.AutoMigrate(&models.User{},&models.OauthToken{},&models.Role{},&models.Permission{},)tmpl:=iris.HTML("./web/views",".html").Layout("shared/layout.html").Reload(true)app.RegisterView(tmpl)app.HandleDir("/public","./web/public")app.OnAnyErrorCode(func(ctxiris.Context){ctx.ViewData("Message",ctx.Values().GetStringDefault("message","Thepageyou'relookingfordoesn'texist"))ctx.View("shared/error.html")})sessManager:=sessions.New(sessions.Config{Cookie:"sessioncookiename",Expires:241.txta.sha.txtcasbin为用户绑定角色的实现.txtconfigconfig.yamldocker 之inspect.txtetcd操作记录.txtfolder_structure.pnggo.modgo.sumhandlerlog1.txtmainmain.gomodelsrpcservicestransformervalidatesvendorweb记录docker中运行kafka.txt记录websocket.txt任务内容.txt记录数据库操作.txt调试中途问题记录.txt理解通道缓冲区个数问题.txttime.Hour,})index:=mvc.New(app.Party("/index"))index.Handle(new(controllers.IndexController))self:=mvc.New(app.Party("/self"))self.Register(sessManager.Start,)self.Handle(new(controllers.SelfController))shopCar:=mvc.New(app.Party("/shopcar"))shopCar.Handle(new(controllers.ShopCarController))assort:=mvc.New(app.Party("/assort"))assort.Handle(new(controllers.AssortController))order:=mvc.New(app.Party("/order"))order.Handle(new(controllers.OrderController))user:=mvc.New(app.Party("/user"))userService:=services.NewUserService()user.Register(userService,sessManager.Start,)user.Handle(new(controllers.UserGController))routes.RegisterApi(app)apiRoutes:=routes.GetRoutes(app)models.CreateSystemData(apiRoutes)//websocket1(app)gofunc(){fmt.Println("启动websocket服务")http.Handle("/ws",websocket.Handler(handler.Handle))err:=http.ListenAndServe(":88",nil)iferr!=nil{fmt.Println(err)fmt.Println("websocket启动异常")}else{fmt.Println("websocket监听服务")}}()gorpc.Server()//setupWebsocket(app)fmt.Println("启动iris服务")app.Run(//Startsthewebserveratlocalhost:8080iris.Addr(":8082"),//IgnoreserrserverclosedlogwhenCTRL/CMD+Cpressed.iris.WithoutServerError(iris.ErrServerClosed),//Enablesfasterjsonserializationandmore.//iris.WithOptimizations,iris.WithConfiguration(irisConfiguration),)fmt.Println("启动iris服务1")}//funcsetupWebsocket(app*iris.Application){////createourechowebsocketserver//ws:=websocket.New(websocket.Config{//ReadBufferSize:1024,//WriteBufferSize:1024,//})//ws.OnConnection(handleConnection)//////registertheserveronanendpoint.////seetheinlinejavascriptcodeinthewebsockets.html,////thisendpointisusedtoconnecttotheserver.//app.Get("/echo",ws.Handler())////servethejavascriptbuilt'nclient-sidelibrary,////seewebsockets.htmlscripttags,thispathisused.//app.Any("/iris-ws.js",websocket.ClientHandler())//}////funchandleConnection(cwebsocket.Connection){////Readeventsfrombrowser//c.On("chat",func(msgstring){////Printthemessagetotheconsole,c.Context()istheiris'shttpcontext.//fmt.Printf("%ssent:%s",c.Context().RemoteAddr(),msg)////Writemessagebacktotheclientmessageownerwith:////c.Emit("chat",msg)////Writemessagetoallexceptthisclientwith://c.To(websocket.Broadcast).Emit("chat",msg)//})//}