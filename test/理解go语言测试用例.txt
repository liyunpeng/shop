Go语言的测试用例都是由testing包完成。
testing包提供了三种测试方式：单元测试、性能测试和覆盖率测试。
单元测试，即测试函数的正确性。
性能测试，即测试函数的耗用时间，分配的内存。

不管是单元测试，还是性能测试，其满足一下特点：
1. 测试用例文件不会参与正常源码的编译，不会被包含到可执行文件中；
2. 测试用例的文件名必须以_test.go结尾；
3. 需要使用 import 导入 testing 包；
4. 函数名称要以Test或Benchmark开头，后面可以跟任意字母组成的字符串.
5. 被测试函数的第一个字母必须大写，例如 TestAbc()，一个测试用例文件中可以包含多个测试函数；
6. 单元测试则以(t *testing.T)作为参数，性能测试以(t *testing.B)做为参数；
7. 测试用例文件使用go test命令来执行，源码中不需要 main() 函数作为入口，
8. 不写文件名，所有以_test.go结尾的源码文件内以Test开头的函数都会自动执行，但子目录中的文件不会被执行
